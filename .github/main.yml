name: Terraform utilizando OpenID Connect
on: 
  push:
    branches:
     - main
  pull_request:
    branches:
     - main
  workflow_dispatch:

permissions:
      id-token: write
      contents: read
      pull-requests: write
      
jobs: 
  analysis:
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: terraform-deploy
    name: Analyse the Terraform
    environment: dev
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2.5.0

    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3

    - name: Terraform Fmt
      run: terraform fmt -check

    - name: Terraform Init
      run:  terraform init 
                
    - name: Terraform Validate
      run: terraform validate -no-color
      
    # - name: tfsec
    #   uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
    #   with:
    #     tfsec_args: --soft-fail
    #     github_token: ${{ github.token }}
        
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false -var "resource_group_name=${{secrets.AZURE_RESOURCE_GROUP_NAME}}"
      continue-on-error: true
